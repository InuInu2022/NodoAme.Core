<Window x:Class="NodoAme.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:NodoAme.ViewModels"
        xmlns:local="clr-namespace:NodoAme"
        xmlns:models="clr-namespace:NodoAme.Models"
        xmlns:epoxy="https://github.com/kekyo/Epoxy"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        ui:WindowHelper.UseModernWindowStyle="True"
        fw:AcrylicWindow.Enabled="True"
        fw:AcrylicWindow.AcrylicWindowStyle="NoIcon"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="600"
        Width="800"
        ResizeMode="CanResizeWithGrip">
  <Window.DataContext>
    <viewmodels:MainWindowViewModel />
  </Window.DataContext>
  <epoxy:EventBinder.Events>
    <epoxy:Event Name="Loaded"
                 Command="{Binding Ready}" />
  </epoxy:EventBinder.Events>
  <Window.Resources>
    <models:RadioButtonConverter x:Key="VowelOptionConverter" />
    <Style TargetType="ui:SimpleStackPanel">
      <Setter Property="Spacing"
              Value="6" />
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonRevealStyle}">
      <Setter Property="FontSize"
              Value="20" />
    </Style>
  </Window.Resources>
  <!-- +++++++++++++++++++++++++++++ Screen elements +++++++++++++++++++++++++++++++++++++ -->
  <Grid fw:PointerTracker.Enabled="True">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <!-- TextBox x:Name="textbox"
             VerticalAlignment="Top"
             Margin="10,10,10,0"
             TextWrapping="Wrap"
             AcceptsReturn="True"
             ToolTip="ここに変換したい歌詞などの文字列を入れてください。"
             Style="{StaticResource TextBoxRevealStyle}"
             Text="{Binding SourceText}" / -->
    <WrapPanel Grid.Row="0">
      <ComboBox x:Name="TalkSoftComboBox"
                Text="Engine"
                ToolTip="音素・かな変換をするトークソフトを選びます。&#xA;最初は NodoAme 標準エンジンです。&#xA;「⚠」のつくトークソフトは制限があります。"
                Width="150"
                Margin="10,10,10,0"
                FontSize="16.0"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                SelectedValuePath="Id"
                DisplayMemberPath="Name"
                ItemsSource="{Binding TalkSoftItems}"
                IsEnabled="{Binding IsTalkSoftComboEnabled}"
                SelectedIndex="{Binding TalkSoftSelected}" />
      <TextBlock x:Name="VoiceTextbox"
                 Text="Voice:"
                 Margin="10,10,10,0"
                 FontSize="16.0"
                 VerticalAlignment="Center" />
      <ComboBox x:Name="PreviewVoiceComboBox"
                Text="Voice"
                ToolTip="しゃべらせるお手本になる、トークのボイスを選びます。"
                Width="150"
                Margin="10,10,10,0"
                FontSize="16.0"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                SelectedValuePath="Id"
                DisplayMemberPath="Name"
                IsEnabled="{Binding IsPreviewComboEnabled}"
                ItemsSource="{Binding TalkVoiceItems}"
                SelectedIndex="{Binding TalkVoiceSelected}" />
      <ComboBox x:Name="StylePresetComboBox"
                Text="VoiceStyle"
                ToolTip="ボイスの感情・スタイル・声質プリセットを選びます"
                Width="100"
                Margin="10,10,10,0"
                FontSize="16.0"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                SelectedValuePath="Id"
                DisplayMemberPath="Name"
                IsEnabled="{Binding IsStylePresetsComboEnabled}"
                ItemsSource="{Binding TalkVoiceStylePresetsItems}"
                SelectedIndex="{Binding VoiceStylePresetsSelected}" />
      <StackPanel Orientation="Horizontal"
                  Margin="10,10,10,0">
        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
      </StackPanel>
      <ComboBox x:Name="ExportCastComboBox2"
                Text="ExportCast"
                ToolTip="喋らせるソングキャストを選びます&#xA;「⚠」のついたキャストはまだ上手くしゃべれません。"
                Width="Auto"
                Margin="10,10,10,0"
                FontSize="16.0"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                ItemsSource="{Binding ExportCastItems}"
                SelectedIndex="{Binding ExportCastSelected}">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <TextBlock>
                <Run FontSize="12.5"
                     Text="{Binding SongSoft}"
                     Foreground="{DynamicResource SystemBaseMediumColorBrush}" />
                <Run Text="{Binding Name}" />
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
    </WrapPanel>
    <!-- talk soft parameters -->
    <Expander x:Name="parameters"
              Header="パラメータ"
              ExpandDirection="Down"
              IsExpanded="False"
              VerticalAlignment="Stretch"
              Margin="10"
              Grid.Row="1">
      <ScrollViewer Margin="0"
                    VerticalScrollBarVisibility="Auto">
        <ItemsControl x:Name="ParameterList"
                      Margin="0,0,0,0"
                      MaxHeight="300"
                      BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                      fw:PointerTracker.Enabled="True"
                      ItemsSource="{Binding TalkSoftParams}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal"
                          Width="350">
                <Label Content="{Binding Name}"
                       Width="45"
                       Margin="5,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       FontSize="11" />
                <ui:NumberBox Width="65"
                              FontSize="11"
                              Value="{Binding Value, ElementName=slider}" />
                <Slider x:Name="slider"
                        Width="190"
                        Margin="10,0"
                        Minimum="{Binding Min}"
                        Maximum="{Binding Max}"
                        TickFrequency="0.1"
                        SmallChange="1"
                        Value="{Binding Value}" />
              </StackPanel>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
    </Expander>
    <!-- standard options -->
    <WrapPanel Grid.Row="2" />
    <!-- TextBox x:Name="phbox"
             VerticalAlignment="Top"
             Margin="10,0,10,0"
             TextWrapping="Wrap"
             AcceptsReturn="True"
             FontSize="16.0"
             FontFamily="Georgia"
             IsReadOnly="True"
             IsReadOnlyCaretVisible="True"
             Text="{Binding ConvertedText}" / -->
    <!-- List start -->
    <fw:DropShadowPanel Grid.Row="3"
                        ShadowMode="Outer"
                        VerticalAlignment="Stretch"
                        MinHeight="50">
      <DataGrid BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                fw:PointerTracker.Enabled="True"
                ItemsSource="{Binding Serifs}"
                AutoGenerateColumns="False"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserReorderColumns="True"
                CanUserSortColumns="False"
                SelectionUnit="CellOrRowHeader"
                VirtualizingPanel.ScrollUnit="Pixel"
                VerticalScrollBarVisibility="Auto"
                SelectedIndex="{Binding SelectedSerifIndex, Mode=OneWay}">
        <!-- 右クリックによるコンテキストメニューの表示 -->
        <!-- DataGrid.ContextMenu>
          <ContextMenu x:Name="uxDataGridContextMenu">
            <MenuItem Header="コピー"
                      Command="{Binding CopyRow}" />
            <MenuItem Header="貼り付け"
                      Command="{Binding CopyRow}" />
            <Separator />
            <MenuItem Header="上に行挿入"
                      Command="{Binding CopyRow}" />
            <MenuItem Header="下に行挿入" />
            <MenuItem Header="この行を削除" />
          </ContextMenu>
        </DataGrid.ContextMenu -->
        <DataGrid.Columns>
          <DataGridTextColumn Header="セリフ"
                              Width="*"
                              Binding="{Binding SourceText, UpdateSourceTrigger=PropertyChanged}">
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="TextWrapping"
                        Value="Wrap" />
                <Setter Property="ToolTip"
                        Value="ここに変換したいセリフや歌詞などの文字列を入れてください。" />
                <Setter Property="Padding"
                        Value="5" />
              </Style>
            </DataGridTextColumn.ElementStyle>
            <DataGridTextColumn.EditingElementStyle>
              <Style TargetType="{x:Type TextBox}">
                <Setter Property="TextWrapping"
                        Value="Wrap" />
                <Setter Property="AcceptsReturn"
                        Value="False" />
                <Setter Property="Padding"
                        Value="5" />
                <!-- Setter Property="IsEnabled"
                        Value="{Binding EnabledInputSerif}" / -->
              </Style>
            </DataGridTextColumn.EditingElementStyle>
            <!-- epoxy:EventBinder.Events>
						<epoxy:Event Name="KeyDown"
									Command="{Binding CheckEnterAndAddRow}" />
					</epoxy:EventBinder.Events -->
          </DataGridTextColumn>
          <!-- DataGridTemplateColumn 
					Header="セリフ"
					Width="*"
					>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding ElementName=PreviewButton, Path=IsEnabled}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn -->
          <DataGridTemplateColumn Header="試聴"
                                  Width="SizeToCells">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <StackPanel VerticalAlignment="Center">
                  <Button x:Name="PreviewButton"
                          Content=""
                          ToolTip="文字列を現在のボイスでプレビュー試聴します。&#xA;⚠音素の差し替えオプションは反映されません。"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          Width="50"
                          FontSize="28"
                          FontFamily="Segoe MDL2 Assets"
                          Style="{StaticResource ButtonRoundRevealStyle}"
                          IsEnabled="{Binding EnabledPreview}"
                          Command="{Binding PreviewTalk}" />
                  <ProgressBar x:Name="previewProgress"
                                  IsIndeterminate="True"
                                  Visibility="{Binding PreviewProgress}"/>
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="出力"
                                  Width="SizeToCells">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <StackPanel VerticalAlignment="Center">
                  <Button Content=""
                        Width="50"
                        FontSize="28"
                        FontFamily="Segoe MDL2 Assets"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        ToolTip="ソング向けのCeVIOのファイルを出力します。&#xA;⚠音素の差し替えオプションは反映されません。"
                        Style="{StaticResource ButtonRoundRevealStyle}"
                        IsEnabled="{Binding EnabledExport}"
                        Command="{Binding ExportTrackFile}">
                  </Button>
                  <ProgressBar x:Name="exportProgress"
                                IsIndeterminate="True"
                                Visibility="{Binding ExportProgress}"
                 />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="音素"
                                  Width="*">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBox VerticalAlignment="Stretch"
                           TextWrapping="Wrap"
                           AcceptsReturn="False"
                           FontFamily="Georgia"
                           FontSize="16.5"
                           IsReadOnly="True"
                           Style="{StaticResource TextBoxRevealStyle}"
                           Text="{Binding ConvertedText}" />
                </DockPanel>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>
    </fw:DropShadowPanel>
    <!-- List end -->
    <Expander x:Name="options"
              Header="オプション"
              ExpandDirection="Down"
              IsExpanded="False"
              VerticalAlignment="Stretch"
              Margin="10"
              Grid.Row="4">
      <ScrollViewer Margin="10,10,10,0"
                    MaxHeight="400px"
                    VerticalScrollBarVisibility="Auto">
        <ui:SimpleStackPanel>
          <WrapPanel fw:PointerTracker.Enabled="True">
            <ui:RadioButtons x:Name="ShowOptions"
                             MaxColumns="2"
                             Margin="10,0">
              <RadioButton x:Name="RadioOptionShowPhoneme"
                           Content="音素"
                           ToolTip="「音素」の表示に変換します。&#xA;CeVIOやVOICEVOXの音素表記形式です。"
                           IsChecked="{Binding IsConvertToPhoneme}" />
              <RadioButton x:Name="RadioOptionShowHiragana"
                           Content="ひらがな"
                           ToolTip="【未実装】実際の発音の「ひらがな」に変換します。&#xA;例：「こんにちは」→「こんにちわ」"
                           IsEnabled="false" />
            </ui:RadioButtons>
            <CheckBox x:Name="Spacing"
                      Content="スペース区切り"
                      Margin="10,0,10,0"
                      IsChecked="{Binding IsUseSeparaterSpace}" />
          </WrapPanel>
          <Expander x:Name="phonemeOptions"
                    Header="音素"
                    ToolTip="音素に関係するオプションです。"
                    ExpandDirection="Down"
                    IsExpanded="True"
                    VerticalAlignment="Top"
                    Margin="10,0,0,0">
            <WrapPanel fw:PointerTracker.Enabled="True">
              <CheckBox x:Name="ConvertNasal"
                        Content="「ん」を変換する(N,n,m,ng)"
                        ToolTip="「ん」の発音を4パターンに変換します。"
                        IsChecked="{Binding IsCheckJapaneseSyllabicNasal}"
                        Margin="10,0"
                        IsEnabled="{Binding IsConvertToPhoneme}" />
              <CheckBox x:Name="ConvertGa"
                        Content="「が行」を変換する(g,ng)"
                        ToolTip="語頭のガ行は「g」,語中の鼻濁音ガ行は「n,g」に変換します。&#xA;※本当はもっと複雑ですが、シンプルな変換ルールです"
                        IsChecked="{Binding IsCheckJananeseNasalGa}"
                        Margin="10,0"
                        IsEnabled="{Binding IsConvertToPhoneme}" />
              <ui:RadioButtons x:Name="RemoveNonSoundVowel"
                               MaxColumns="3"
                               Margin="10,0"
                               IsEnabled="{Binding IsConvertToPhoneme}">
                <RadioButton x:Name="RadioOptionNonSoundVowelDoNothing"
                             GroupName="NonSoundVowel"
                             IsChecked="{Binding VowelOption, Converter={StaticResource VowelOptionConverter}, Mode=TwoWay, ConverterParameter=DoNothing}"
                             Content="無声母音そのまま"
                             ToolTip="無声母音「U」「I」をそのまま何もしません。" />
                <RadioButton x:Name="RadioOptionNonSoundVowelSmall"
                             GroupName="NonSoundVowel"
                             IsChecked="{Binding VowelOption, Converter={StaticResource VowelOptionConverter}, Mode=TwoWay, ConverterParameter=Small}"
                             Content="無声母音を小文字化"
                             ToolTip="無声母音「U」「I」を小文字音素「u」「i」に変換します。母音が無声母音でないときと同じになります。" />
                <RadioButton x:Name="RadioOptionNonSoundVowelRemoving"
                             GroupName="NonSoundVowel"
                             IsChecked="{Binding VowelOption, Converter={StaticResource VowelOptionConverter}, Mode=TwoWay, ConverterParameter=Remove}"
                             Content="無声母音を削除"
                             ToolTip="無声母音「U」「I」を削除（脱落）します。" />
              </ui:RadioButtons>
            </WrapPanel>
          </Expander>
          <Expander x:Name="saveOptions"
                    Header="保存"
                    ExpandDirection="Down"
                    IsExpanded="False"
                    VerticalAlignment="Top"
                    Margin="10,0,0,0">
            <WrapPanel fw:PointerTracker.Enabled="True">
              <ComboBox x:Name="exportLyricesMode"
                        Margin="10"
                        Padding="5"
                        ItemsSource="{Binding ExportLyricsModeList}"
                        SelectedItem="{Binding SongExportLyricsMode}"
                        />
              <StackPanel Orientation="Horizontal">
                <Button x:Name="selectSavePath"
                        Content="保存先選択"
                        Margin="10"
                        Padding="5"
                        Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding SelectExportDirectory}" />
                <TextBox Text="{Binding PathToSaveDirectory}"
                         Width="300"
                         VerticalAlignment="Center"
                         IsReadOnly="true"
                         Margin="5" />
              </StackPanel>
              <CheckBox Content="保存時自動でCeVIOを開く"
                        IsChecked="{Binding IsOpenCeVIOWhenExport}"
                        Margin="10,0,10,0" />
              <WrapPanel Orientation="Horizontal">
                <CheckBox Content="セリフをテキストファイルに保存"
                        IsChecked="{Binding IsExportSerifText}"
                        IsEnabled="true"
                        Margin="10,0,10,0" />
                <Button x:Name="selectExportSerifTextPath"
                        Content="セリフ保存先選択"
                        Margin="10"
                        Padding="5"
                        IsEnabled="{Binding IsExportSerifText}"
                        Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding SelectExportSerifTextDir}" />
                <TextBox Text="{Binding PathToExportSerifTextDir}"
                         Width="300"
                         VerticalAlignment="Center"
                         IsEnabled="{Binding IsExportSerifText}"
                         IsReadOnly="true"
                         Margin="5" />
                <Expander x:Name="exportSerifTextOptions"
                    Header="セリフ保存オプション"
                    ExpandDirection="Down"
                    IsExpanded="False"
                    IsEnabled="{Binding IsExportSerifText}"
                    VerticalAlignment="Top"
                    Margin="10,0,0,0">
                  <TextBox x:Name="exportSerifTextFileName"
                          Text="{Binding DefaultExportSerifTextFileName}"
                          Width="300"
                          VerticalAlignment="Center"
                          IsEnabled="{Binding IsExportSerifText}"
                          IsReadOnly="false"
                          Margin="5" />
                </Expander>
              </WrapPanel>
              <CheckBox Content="Export with .lab file."
                        IsChecked="false"
                        IsEnabled="false"
                        Margin="10,0,10,0" />
              <CheckBox Content="Save preview voice"
                        IsChecked="false"
                        IsEnabled="false"
                        Margin="10,0,10,0" />
              <Button x:Name="exportSusuruTrack"
                        Content="カレーうどんをすする"
                        Margin="10"
                        Padding="5"
                        Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding ExportSusuru}" />
            </WrapPanel>
          </Expander>
          <Expander x:Name="otherOptions"
                    Header="そのほか"
                    ExpandDirection="Down"
                    IsExpanded="False"
                    VerticalAlignment="Top"
                    Margin="10,0,0,0">
            <WrapPanel fw:PointerTracker.Enabled="True">
              <Button x:Name="openLicense"
                      Content="ライセンス"
                      Margin="10"
                      Padding="5"
                      Style="{StaticResource ButtonRevealStyle}"
                      Command="{Binding OpenLicenses}" />
              <CheckBox Content="Debug"
                        IsEnabled="false"
                        Margin="10,10,10,0" />
            </WrapPanel>
          </Expander>
        </ui:SimpleStackPanel>
      </ScrollViewer>
    </Expander>
  </Grid>
</Window>